#### Largest element in array
import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=s.nextInt();
        }
        int max=0;
        for(int j=0;j<n;j++){
            if(arr[j]>max){
                max=arr[j];
            }
        }
        System.out.println(max);
	}
}


#### Smallest element in array
import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=s.nextInt();
        }
        int min=arr[0];
        for(int j=0;j<n;j++){
            if(arr[j]<min){
                min=arr[j];
            }
        }
        System.out.println(min);
	}
}


#### Second smallest element in array
import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=s.nextInt();
        }
        int min=arr[0];
        int secmin=arr[0];
        for(int j=0;j<n;j++){
            if(arr[j]<min){
                min=arr[j];
            }
        }
        for(int i=0;i<n;i++){
            if(arr[i]<secmin && arr[i]!=min){
                secmin=arr[i];
            }
        }
        System.out.println(secmin);
	}
}


#### Sum of all element in array
import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=s.nextInt();
        }
        int sum=0;
        for(int j=0;j<n;j++){
            sum+=arr[j];
        }

        System.out.println(sum);
	}
}


#### Reverse an array
import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int[] a=new int[n];
        int[] b=new int[n];
        for(int i=0;i<n;i++){
            a[i]=s.nextInt();
        }
        for(int j=0;j<n;j++){
            b[j]=a[n-j-1];
        }

        System.out.println(Arrays.toString(b));
	}
}


#### Sort half in ascending and sort other half in descending
import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int[] a=new int[n];
        int[] b=new int[n];
        for(int i=0;i<n;i++){
            a[i]=s.nextInt();
        }
        for(int i=0;i<n-1;i++){
            for(int j=0;j<n/2;j++){
                if(a[j]>a[j+1]){
                    int temp=a[j];
                    a[j]=a[j+1];
                    a[j+1]=temp;
                }
            }
            for(int j=n/2;j<n-1;j++){
                if(a[j]<a[j+1]){
                    int temp=a[j];
                    a[j]=a[j+1];
                    a[j+1]=temp;
                }
            }
        }
        System.out.println(Arrays.toString(a));
	}
}



#### Sort the array
import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int[] a=new int[n];
        for(int i=0;i<n;i++){
            a[i]=s.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<n-i-1;j++){
                if(a[j]>a[j+1]){
                    int temp=a[j];
                    a[j]=a[j+1];
                    a[j+1]=temp;
                }
            }
        }
        System.out.println(Arrays.toString(a));
	}
}


#### Frequency of each number in given array
import java.io.*;
import java.util.*;
class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int n=s.nextInt();
		int[] arr=new int[n];
		Map<Integer,Integer> mp=new HashMap<>();
		for(int i=0;i<n;i++){
		    arr[i]=s.nextInt();
		}
		for(int i=0;i<n;i++){
		    if(mp.containsKey(arr[i])){
		        mp.put(arr[i],mp.get(arr[i])+1);
		    }
		    else mp.put(arr[i],1);
		}
		for(Map.Entry e:mp.entrySet()){
		    System.out.println(e.getKey()+"="+e.getValue());
		}
	}
}



#### 
