#### Highest Common Factor(HCF) of two numbers
import java.io.*;
import java.util.Scanner;
class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int a=s.nextInt();
        int b=s.nextInt();
        int hcf=0;
        for(int i=1;i<=a || i<=b;i++){    
            if(a%i==0 && b%i==0){
                hcf=i;
            }
        }
        System.out.println("hcf:"+ hcf);
	}
} 



#### Lowest Common Multiple(LCM) of two numbers
import java.io.*;
import java.util.Scanner;

class GFG {
	public static void main (String[] args) {
        Scanner s=new Scanner(System.in);
        int a=s.nextInt();
        int b=s.nextInt();
        int lcm=Math.max(a,b);
        for(int i=lcm;i<=a*b;i++){    
            if(i%a==0 && i%b==0){
                lcm=i;
                break;
            }
        }
        System.out.println("lcm:"+lcm);
	}
}



#### Binary to Decimal
import java.io.*;
import java.util.Scanner;

class GFG {
	public static void main (String[] args) {
          	Scanner s=new Scanner(System.in);
          	int a=s.nextInt();
          	int n=0;
          	int sum=0;
          	while(a>0){
          	    int d=a%10;
          	    sum+=d*Math.pow(2,n);
          	    a/=10;
          	    n++;
          	}
          	System.out.println(sum);
	}
}



#### Octal number to Decimal number
import java.io.*;
import java.util.Scanner;

class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int n=s.nextInt();
		int sum=0;
		int i=0;
		while(n>0){
		    int d=n%10;
		    sum+=d*Math.pow(8,i);
		    n/=10;
		    i++;
		}
		System.out.println(sum);
	}
}



#### Hexadecimal number to decimal number
import java.io.*;
import java.util.Scanner;
class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		String n=s.nextLine();
		String digit="0123456789ABCDEF";
		n=n.toUpperCase();
		int sum=0;
		for(int i=0;i<n.length();i++){
		    char ch=n.charAt(i);
		    int d=digit.indexOf(ch);
		    sum=16*sum+d;
		}
		System.out.println(sum);
	}
}



#### Decimal to binary 
import java.io.*;
import java.util.Scanner;
class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int n=s.nextInt();
		int[] arr=new int[30];
		int i=0;
		while(n>0){
		    int d=n%2;
		    arr[i++]=d;
		    n/=2;
		}
		for(int j=0;j<i;j++){
		    System.out.print(arr[i-j-1]);
		}
	}
}




#### Decimal to octal
import java.io.*;
import java.util.Scanner;
class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int n=s.nextInt();
		int[] arr=new int[30];
		int i=0;
		while(n>0){
		    int d=n%8;
		    arr[i++]=d;
		    n/=8;
		}
		for(int j=0;j<i;j++){
		    System.out.print(arr[i-j-1]);
		}
	}
}




#### decimal to hexadecimal
/*package whatever //do not write package name here */

import java.io.*;
import java.util.Scanner;
class GFG {
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
		int num=sc.nextInt();
		char[] hexa = new char[100];
		int i = 0;
        while (num != 0)
        {
            int rem=num % 16;
            if(rem<10)
            {
                hexa[i]=(char)(rem + 48);
                i++;
            }                    
            else
            {
                hexa[i]=(char)(rem + 55);
                i++;
            } 
            num/=16;
        }
        for(int j=i-1;j>=0;j--){
            System.out.print (hexa[j]);
        }
	}
}



####Quadrants in which a given coordinate lies
/*package whatever //do not write package name here */

import java.util.Scanner;

class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int x=s.nextInt();
		int y=s.nextInt();
		if(x>0 && y>0){
		    System.out.println("First quadrant");
		}
		else if(x<0 && y>0){
		    System.out.println("Second quadrant");
		}
		else if(x<0 && y<0){
		    System.out.println("Third quadrant");
		}
		else if(x>0 && y<0){
		    System.out.println("Fourth quadrant");
		}
		else if(x==0 && y==0){
		    System.out.println("Origin");
		}
		else if(x!=0 && y==0){
		    System.out.println("X-axis");
		}
		else if(x==0 && y!=0){
		    System.out.println("Y-axis");
		}
	}
}



####Permutation
import java.util.Scanner;

class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int n=s.nextInt();
		int r=s.nextInt();
		int p;
		p=fact(n)/(fact(n-r));
		System.out.println(p);
	}
	static int fact(int n){
	    int f=1;
	    while(n>0){
	        f=f*n;
	        n--;
	    }
	    return f;
	}
}



####Add two fraction
/*package whatever //do not write package name here */

import java.util.Scanner;

class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int n1=s.nextInt();
		int d1=s.nextInt();
		int n2=s.nextInt();
		int d2=s.nextInt();
		int num,den,x;
		if(d1==d2){
		    den=d1;
		    num=n1+n2;
		}
		else{
		    den=d1*d2;
		    num=(n1*d2)+(n2*d1);
		}
		if(num>den){
		    x=num;
		}
		else{ 
		    x=den;
		}
		for(int i=1;i<=x;i++){
		    if(num%i==0 && den%i==0){
		        num/=i;
		        den/=i;
		    }
		}
		int n=1;
		int p=num;
		int q=den;
		if(num!=den)
		{
			while(n!=0)
			{
				n=num%den;			
				if(n!=0)
				{
					num=den;
					den=n;
				}
			}			
		}
		System.out.println(p/den+"/"+q/den);
	}
}



###Replace 0's with 1
import java.util.Scanner;

class GFG {
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int n=s.nextInt();
		int k=1;
		int replace=0;
		while(n>0){
		    int r=n%10;
		    if(r==0) r=1;
		    replace+=r*k;
		    n/=10;
		    k*=10;
		}
		System.out.println(replace);
	}
}



###Prime number between range
import java.util.Scanner;

class GFG {
    public static boolean isPrime(int n){
        if(n<=1) return false;
        for(int i=2;i<n/2;i++){
            if(n%i==0){
                return false;
            } 
        }
         return true;
        
    }
	public static void main (String[] args) {
		Scanner s=new Scanner(System.in);
		int n1=s.nextInt();
		int n2=s.nextInt();
		for(int i=n1;i<=n2;i++){
		    if(isPrime(i)){
		        System.out.println(i);
		    }
		}
	}
}
